{"mappings":"kjBAGeA,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAoBC,G,kBAMhB,IAAMC,GAAkBC,EAAMC,QAASC,EAAKD,OAASE,EAAI,GACzDC,YAAW,WAiBf,IAAuBC,EAAUC,GAAVD,EAhBHF,EAgBaG,EAhBVP,EAiBd,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAkB,CAAEL,WAAUC,SACdK,KAAKC,SAAW,GAGpCJ,EAAQE,GAGRD,EAAOC,E,KAxBJG,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBS,EAAAC,GAASC,OAAOC,QACd,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAGjDc,OAAM,SAAAN,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBS,EAAAC,GAASC,OAAOI,QACd,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,MAGhDP,E,EAlBLD,EAAEwB,iBAIF,IAHA,IAEYC,EAARzB,EAAE0B,OADJC,SAAYzB,EAAKuB,EAALjB,MAAOJ,EAAIqB,EAAJrB,KAAMwB,EAAMH,EAANG,OAElBC,EAAI,EAAGA,IAAMD,EAAOzB,MAAO0B,GAAK,EAACC,EAAAD,GAgB1C7B,EAAE+B,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', submitData);\n\nfunction submitData(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.target;\n  for (let i = 1; i <= +amount.value; i += 1) {\n    const stepForPromise = +delay.value + +step.value * (i - 1);\n    setTimeout(() => {\n      createPromise(i, stepForPromise)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }, stepForPromise);\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const objectForPromis = { position, delay };\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve(objectForPromis);\n    } else {\n      // Reject\n      reject(objectForPromis);\n    }\n  });\n}\n"],"names":["document","querySelector","addEventListener","e","stepForPromise","delay1","value","step","i","setTimeout","position","delay","Promise","resolve","reject","objectForPromis","Math","random","then","param","$parcel$interopDefault","$6JpON","Notify","success","concat","catch","failure","preventDefault","_elements","target","elements","amount","i1","_loop","currentTarget","reset"],"version":3,"file":"03-promises.b3b316dc.js.map"}