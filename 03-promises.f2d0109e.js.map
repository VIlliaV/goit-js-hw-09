{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAoBC,GAClBA,EAAEC,iBACF,MACEC,UAAYC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAEO,OACN,IAAK,IAAIC,EAAI,EAAGA,IAAMF,EAAOG,MAAOD,GAAK,EAAG,CAC1C,MAAME,GAAkBN,EAAMK,QAASJ,EAAKI,OAASD,EAAI,GACzDG,YAAW,KAiBf,IAAuBC,EAAUT,GAAVS,EAhBHJ,EAgBaL,EAhBVO,EAiBd,IAAIG,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAmB,C,SAAEJ,E,MAAUT,GAC/Bc,EAAgBC,KAAKC,SAAW,GAClCF,EAEFH,EAAQE,GAGRD,EAAOC,EAAiB,KAxBrBI,MAAK,EAACR,SAAEA,EAAQT,MAAEA,MACjBkB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBX,QAAiBT,MAAU,IAGnDqB,OAAM,EAACZ,SAAEA,EAAQT,MAAEA,MAClBkB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoBb,QAAeT,MAAU,GAE/C,GACHO,E,CAELV,EAAE0B,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', submitData);\n\nfunction submitData(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.target;\n  for (let i = 1; i <= +amount.value; i += 1) {\n    const stepForPromise = +delay.value + +step.value * (i - 1);\n    setTimeout(() => {\n      createPromise(i, stepForPromise)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }, stepForPromise);\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const objectForPromise = { position, delay };\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve(objectForPromise);\n    } else {\n      // Reject\n      reject(objectForPromise);\n    }\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","e","preventDefault","elements","delay","delay1","step","amount","target","i","value","stepForPromise","setTimeout","position","Promise","resolve","reject","objectForPromise","shouldResolve","Math","random","then","$parcel$interopDefault","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.f2d0109e.js.map"}